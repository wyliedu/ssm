<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
  	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/tx
  						http://www.springframework.org/schema/tx/spring-tx.xsd
  						http://www.springframework.org/schema/aop
  						http://www.springframework.org/schema/aop/spring-aop.xsd
  						http://www.springframework.org/schema/cache
  						http://www.springframework.org/schema/cache/spring-cache.xsd
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
  	<!-- 扫描注解 -->
  	<context:component-scan base-package="com.hszs.stb" />
  	
	<!-- 启动对@AspectJ注解的支持,通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" index="0" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

    <!-- 避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
				<value>application/*+json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	<bean id="conversionService" class="org.springframework.format.support.DefaultFormattingConversionService" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="conversionService" ref="conversionService" />
			</bean>
		</property>
		<property name="messageConverters">
			<list>
				<!-- <ref bean="stringHttpMessageConverter" /> -->
				<ref bean="mappingJacksonHttpMessageConverter" />
				<ref bean="byteArrayHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
				<ref bean="stringHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- 默认的注解映射的支持 -->  
<!--     <mvc:annotation-driven validator="validator" conversion-service="conversion-service" />
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        不设置则默认为classpath下的ValidationMessages.properties
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean>
    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
    <bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basename" value="classpath:validatemessages"/>  
        <property name="fileEncodings" value="utf-8"/>  
        <property name="cacheSeconds" value="120"/>  
	</bean>  -->

    <!-- 配置自定义过滤 -->
    <mvc:interceptors>
    	<mvc:interceptor>
    	<mvc:mapping path="/**" />
    	  	<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置  -->
    		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
        </mvc:interceptor>
    	<mvc:interceptor> 
    		<mvc:mapping path="/**" />
    		<mvc:exclude-mapping path="/apis/**" />
    		<!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
        	<bean class="com.hszs.stb.web.home.AuthInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
			<mvc:mapping path="/apis/**" />
			<mvc:exclude-mapping path="/pages/**" />
			<bean class="com.hszs.stb.web.home.ProjectApiInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/apis/**" />
			<mvc:exclude-mapping path="/apis/auth/**" />
			<mvc:exclude-mapping path="/apis/system/**" />
			<mvc:exclude-mapping path="/pages/**" />
			<mvc:exclude-mapping path="/apis/statistics/**" />
			<bean class="com.hszs.stb.web.home.AccessTokenInterceptor" />
		</mvc:interceptor>
    </mvc:interceptors>    
    <!-- 如果当前请求为“/”时，则转发到“/home/hello” -->
    <mvc:view-controller path="/" view-name="forward:/home/welcome"/> 
    <!-- 静态资源映射 -->
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" />
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/" />
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/fonts/" />
    <mvc:resources mapping="/plugins/**" location="/WEB-INF/plugins/" />
    <mvc:resources mapping="/assets/fonts/**" location="/WEB-INF/assets/fonts/"/>
    <mvc:resources mapping="/assets/img/**" location="/WEB-INF/assets/img/"/>
    <mvc:resources mapping="/assets/css/**" location="/WEB-INF/assets/css/"/>
    <mvc:resources mapping="/assets/js/**" location="/WEB-INF/assets/js/"/>
    <!-- 当上面要访问的静态资源不包括在上面的配置中时，则根据此配置来访问 -->
    <mvc:default-servlet-handler/>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
    
    <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <!-- 设置上传文件的最大尺寸为1MB -->  
	    <property name="maxUploadSize">  
	        <value>1048576</value>  
	    </property>
	    <property name="defaultEncoding"> 
			<value>UTF-8</value> 
		</property>
    </bean>
	
    <!-- 总错误处理-->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings">     
             <props>     
                 <prop key="java.lang.Exception">/home/error</prop>     
                 <prop key="java.lang.Throwable">/home/error</prop>   
                 <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/home/error</prop>      
             </props>     
         </property> 
		<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
	<property name="defaultErrorView" value="error"></property>
	<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
	<property name="exceptionAttribute" value="ex"></property>
    	<!-- 默认HTTP状态码 --> 
    	<property name="defaultStatusCode">   
        	<value>500</value> 
   		 </property>    
   		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 --> 
		<property name="warnLogCategory">   
        	<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value> 
    	</property>    
	</bean>
	
	<mvc:annotation-driven/>  
</beans>